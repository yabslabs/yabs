syntax = "proto3";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "protoc-gen-swagger/options/annotations.proto";
import "github.com/mwitkow/go-proto-validators/validator.proto";

package yabs.storage.api.v1;

option go_package = "API";


option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
    info: {
        title: "yabs storage";
        version: "2.0";
        contact: {
            url: "https://github.com/yabslabs/yabs"
        };
    };

    schemes: HTTPS;

    consumes: "application/json";
    consumes: "application/grpc";

    produces: "application/json";
    produces: "application/grpc";
};

service StorageService {
    rpc AddStorage(AddStorageRequest) returns (AddStorageResponse) {
        option (google.api.http) = {
           post: "/storages"
           body: "*"
        };
    }
    
    rpc GetStorage(GetStorageRequest) returns (GetStorageResponse) {
        option (google.api.http) = {
           get: "/storages"
        };
    }

    rpc GetStorageById(GetStorageByIdRequest) returns (GetStorageByIdResponse) {
        option (google.api.http) = {
           get: "/storages/{id}"
        };
    }

    rpc FilterStorage(FilterStorageRequest) returns (FilterStorageResponse) {
        option (google.api.http) = {
           get: "/storages/_search"
        };
    }

    rpc UpdateStorage(UpdateStorageRequest) returns (UpdateStorageResponse) {
        option (google.api.http) = {
           put: "/storages/{id}"
           body: "*"
        };
    }

    rpc DeleteStorage(DeleteStorageRequest) returns (DeleteStorageResponse) {
        option (google.api.http) = {
           delete: "/storages/{id}"
        };
    }
}

message AddStorageRequest {
    message StorageMessage {
        uint64 id = 1;
        string name = 2;
    }

    // Storage to add
    StorageMessage storage = 1;
}

message AddStorageResponse {
    uint64 id = 1;
    string name = 2;
}

message GetStorageRequest {
    // TODO define
}

message GetStorageResponse {
    // TODO define
}

message GetStorageByIdRequest {
    // ID of storage to fetch
    uint64 id = 1;
}

message GetStorageByIdResponse {
    uint64 id = 1;
    string name = 2;
}

message UpdateStorageRequest{
    // TODO define
}

message UpdateStorageResponse{
    // TODO define
}

message DeleteStorageRequest {
    uint64 id = 1;
}

message DeleteStorageResponse {
    // TODO define
}

message Storage {
    uint64 providerid = 1; 
    string name = 2; 
}

message Storages {
    repeated Storage storage = 1;
}

message StorageID {
    uint64 id = 1;
}

message FilterStorageRequest {
    int64 limit = 1;
    int64 offset = 2;
    string sort = 3;
    string name = 4;
    google.protobuf.Timestamp creationDate = 6;
    google.protobuf.Timestamp changeDate = 7;
}

message FilterStorageResponse {
    // TODO define
}


